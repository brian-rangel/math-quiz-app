// MultipleChoiceView.swift
// This file is used for the Multiple Choice View Controller
// This screen will be used to display multiple choice quiz questions generated by the Quiz struct

import UIKit

class MultipleChoiceView: UIViewController {

    // Outlets
    @IBOutlet weak var questionNumber: UILabel!
    @IBOutlet weak var questionDescription: UILabel!
    @IBOutlet weak var questionLabel: UILabel!
    @IBOutlet weak var choice1: UIButton!
    @IBOutlet weak var choice2: UIButton!
    @IBOutlet weak var choice3: UIButton!
    @IBOutlet weak var choice4: UIButton!
    @IBOutlet weak var nextQuestion: UIButton!
    
    var quiz = Quiz()           // Create an instance of the Quiz struct
    var results = Results()     // Create an instance of the Results struct
    var currentQuestion = 1     // The question the user is on
    var waitForNext = false     // Wait for user to hit next question
    
    // This variable is set to the correct topic by the segue
    var chosenTopic: topic = .addition
    
    // Function for the first choice button
    @IBAction func choice1(_ sender: UIButton) {
        // If the 'Next Question' button isn't active -
        if !waitForNext {
            // Disable use of this choice button until the 'Next Question' button is pressed
            waitForNext = true
            colorButtons(clearColors: false)
            
            // Check if the 'Next Question' button should be a 'View Results' button before displaying it
            if quiz.endQuiz {
                nextQuestion.setTitle("View Results", for: .normal)
            }
            nextQuestion.alpha = 1
            
            // Let the user know whether or not their choice was correct
            if quiz.correctChoice == 1 {
                questionLabel.text = "Correct!"
                
                // Keep track of results
                results.incrementCorrect()
            } else {
                questionLabel.text = "Incorrect!"
                choice1.backgroundColor = UIColor.red
                
                // Keep track of results
                results.incrementWrong()
            }
        }
    }
    
    // Function for the second choice button
    @IBAction func choice2(_ sender: UIButton) {
        // If the 'Next Question' button isn't active -
        if !waitForNext {
            // Disable use of this choice button until the 'Next Question' button is pressed
            waitForNext = true
            colorButtons(clearColors: false)
            
            // Check if the 'Next Question' button should be a 'View Results' button before displaying it
            if quiz.endQuiz {
                nextQuestion.setTitle("View Results", for: .normal)
            }
            nextQuestion.alpha = 1
            
            // Let the user know whether or not their choice was correct
            if quiz.correctChoice == 2 {
                questionLabel.text = "Correct!"
                
                // Keep track of results
                results.incrementCorrect()
            } else {
                questionLabel.text = "Incorrect!"
                choice2.backgroundColor = UIColor.red
                
                // Keep track of results
                results.incrementWrong()
            }
        }
    }
    
    // Function for the third choice button
    @IBAction func choice3(_ sender: UIButton) {
        // If the 'Next Question' button isn't active -
        if !waitForNext {
            // Disable the use of this button until the 'next question' button is pressed
            waitForNext = true
            colorButtons(clearColors: false)
            
            // Check if the 'Next Question' button should be a 'View Results' button before displaying it
            if quiz.endQuiz {
                nextQuestion.setTitle("View Results", for: .normal)
            }
            nextQuestion.alpha = 1
            
            // Let the user know whether or not their choice was correct
            if quiz.correctChoice == 3 {
                questionLabel.text = "Correct!"
                
                // Keep track of results
                results.incrementCorrect()
            } else {
                questionLabel.text = "Incorrect!"
                choice3.backgroundColor = UIColor.red
                
                // Keep track of results
                results.incrementWrong()
            }
        }
    }
    
    // Function for the fourth choice button
    @IBAction func choice4(_ sender: Any) {
        // If the 'Next Question' button isn't active -
        if !waitForNext {
            // Disable the use of this button until the 'next question' button is pressed
            waitForNext = true
            colorButtons(clearColors: false)
            
            // Check if the 'Next Question' button should be a 'View Results' button before displaying it
            if quiz.endQuiz {
                nextQuestion.setTitle("View Results", for: .normal)
            }
            nextQuestion.alpha = 1
            
            // Let the user know whether or not their choice was correct
            if quiz.correctChoice == 4 {
                questionLabel.text = "Correct!"
                
                // Keep track of results
                results.incrementCorrect()
            } else {
                questionLabel.text = "Incorrect!"
                choice4.backgroundColor = UIColor.red
                
                // Keep track of results
                results.incrementWrong()
            }
        }
    }
    
    // Function for the 'Next Question' button
    @IBAction func nextQuestion(_ sender: Any) {
        // If there are still questions to be displayed -
        if !quiz.endQuiz {
            // Increment currentQuestion
            currentQuestion += 1
            
            // Reset variables and buttons
            colorButtons(clearColors: true)
            waitForNext = false
            nextQuestion.alpha = 0
            
            // Display the next question
            quiz.setupQuestions(topic: chosenTopic, question: currentQuestion)
            displayQuestion()
        } else {
            // Go to the results screen view
            self.performSegue(withIdentifier: "Results", sender: nil)
        }
    }
    
    // Function to display the question by updating all labels and buttons
    // All data is grabbed from the quiz instance
    func displayQuestion() {
        // Update labels
        questionNumber.text = quiz.questionNumber
        questionDescription.text = quiz.questionDescription
        questionLabel.text = quiz.questionLabel
        
        // Update buttons
        choice1.setTitle(quiz.choice1, for: .normal)
        choice2.setTitle(quiz.choice2, for: .normal)
        choice3.setTitle(quiz.choice3, for: .normal)
        choice4.setTitle(quiz.choice4, for: .normal)
    }
    
    // Function to change the colors of the buttons
    // This will be called to show the correct button, or to clear the colors
    func colorButtons(clearColors: Bool) {
        if !clearColors {
            if quiz.correctChoice == 1 {
                choice1.backgroundColor = UIColor.green
            }
            else if quiz.correctChoice == 2 {
                choice2.backgroundColor = UIColor.green
            }
            else if quiz.correctChoice == 3 {
                choice3.backgroundColor = UIColor.green
            }
            else if quiz.correctChoice == 4 {
                choice4.backgroundColor = UIColor.green
            }
        } else {
            choice1.backgroundColor = UIColor.white
            choice2.backgroundColor = UIColor.white
            choice3.backgroundColor = UIColor.white
            choice4.backgroundColor = UIColor.white
        }
        
    }

    // Run when the ViewController has been loaded
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Make the 'Next Question' button invisible at the start
        nextQuestion.alpha = 0
        
        // Disply the questions depending on the topic selected
        quiz.setupQuestions(topic: chosenTopic, question: currentQuestion)
        displayQuestion()
    }
    
    // Send data to the next screen when the user selects 'View Results'
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "Results" {
            if let destination = segue.destination as? ResultsView {
                destination.gradePercent = results.percentGrade()
                destination.correctQuestions = results.totalCorrect
                destination.wrongQuestions = results.totalWrong
                destination.totalQuestions = results.totalQuestions
                destination.letterGrade = results.letterGrade()
            }
        }
    }
}
