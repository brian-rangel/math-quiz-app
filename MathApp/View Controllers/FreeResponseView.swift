// MultipleChoiceView.swift
// This file is used for the Free Response View Controller
// This screen will be used to display free response quiz questions generated by the Quiz struct

import UIKit

class FreeResponseView: UIViewController {
    
    // Label outlets
    @IBOutlet weak var questionNumber: UILabel!
    @IBOutlet weak var questionDescription: UILabel!
    @IBOutlet weak var questionLabel: UILabel!
    @IBOutlet weak var textBox: UITextField!
    @IBOutlet weak var correctAnswerLabel: UILabel!
    @IBOutlet weak var nextQuestion: UIButton!
    
    var quiz = Quiz()           // Create an instance of the Quiz struct
    var results = Results()     // Create an instance of the Results struct
    var currentQuestion = 1     // The question the user is on
    var waitForNext = false     // Wait for user to hit next question
    
    // This variable is set to the correct topic by the segue
    var chosenTopic: topic = .addition
    
    // Function for the user to submit an answer
    @IBAction func submitAnswer(_ sender: Any) {
        // If the 'Next Question' button isn't active -
        if !waitForNext {
            // Disable the use of this button until the 'Next Question' button is pressed
            waitForNext = true
            
            // Check if the 'Next Question' button should be a 'View Results' button before displaying it
            if quiz.endQuiz {
                nextQuestion.setTitle("View Results", for: .normal)
            }
            nextQuestion.alpha = 1
            
            // Let the user know whether or not their answer was correct
            if textBox.text == quiz.correctString {
                questionLabel.text = "Correct!"
                
                // Keep track of results
                results.incrementCorrect()
            } else {
                questionLabel.text = "Incorrect!"
                correctAnswerLabel.text = "The correct answer is: \n\(quiz.correctString)"
                correctAnswerLabel.alpha = 1
                
                // Keep track of results
                results.incrementWrong()
            }
        }
    }
    
    // Function for the next question button
    @IBAction func nextQuestion(_ sender: UIButton) {
        // If there are still questions to be displayed -
        if !quiz.endQuiz {
            // Increment currentQuestion
            currentQuestion += 1
            
            // Reset variables, button, and text box
            waitForNext = false
            nextQuestion.alpha = 0
            correctAnswerLabel.alpha = 0
            textBox.text = ""
            
            // Display the next question
            quiz.setupQuestions(topic: chosenTopic, question: currentQuestion)
            displayQuestion()
        } else {
            // Go to the results screen view
            self.performSegue(withIdentifier: "Results", sender: nil)
        }
    }
    
    // Function to display the question by updating all labels and buttons
    // All data is grabbed from the quiz instance
    func displayQuestion() {
        // Update labels
        questionNumber.text = quiz.questionNumber
        questionDescription.text = quiz.questionDescription
        questionLabel.text = quiz.questionLabel
    }

    // Run when the ViewController has been loaded
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Make the 'Next Question' button invisible at the start
        nextQuestion.alpha = 0
        
        // Hide the 'Correct Answer' label
        correctAnswerLabel.alpha = 0
        
        // Disply the questions depending on the topic selected
        quiz.setupQuestions(topic: chosenTopic, question: currentQuestion)
        displayQuestion()
    }
    
    // Send data to the next screen when the user selects 'View Results'
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "Results" {
            if let destination = segue.destination as? ResultsView {
                destination.gradePercent = results.percentGrade()
                destination.correctQuestions = results.totalCorrect
                destination.wrongQuestions = results.totalWrong
                destination.totalQuestions = results.totalQuestions
                destination.letterGrade = results.letterGrade()
            }
        }
    }
}
